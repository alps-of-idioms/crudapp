{"version":3,"sources":["forms/AddUserForm.js","tables/UserTable.js","forms/EditUserForm.js","index.js","App.js"],"names":["AddUserForm","props","initialFormState","id","name","username","_useState","useState","_useState2","Object","slicedToArray","user","setUser","handleInputChange","event","_event$currentTarget","currentTarget","value","objectSpread","defineProperty","react_default","a","createElement","onSubmit","e","preventDefault","addUser","type","onChange","UserTable","users","length","map","key","className","onClick","editRow","window","confirm","deleteUser","colSpan","EditUserForm","currentUser","useEffect","_e$target","target","updateUser","setEditing","ReactDOM","render","setUsers","_useState3","_useState4","editing","_useState5","_useState6","setCurrentUser","concat","toConsumableArray","EditUserForm_EditUserForm","updatedUser","AddUserForm_AddUserForm","UserTable_UserTable","filter","document","getElementById"],"mappings":"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","file":"static/js/main.a7d5e2fb.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddUserForm = props => {\n  const initialFormState = { id: null, name: '', username: '' }\n\n  const [user, setUser] = useState(initialFormState)\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget\n    setUser({ ...user, [name]: value })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (user.name && user.username) {\n      props.addUser(user)\n    }\n    setUser(initialFormState)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        onChange={handleInputChange}\n      />\n      <label>Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={user.username}\n        onChange={handleInputChange}\n      />\n      <button>Add new user</button>\n    </form>\n  )\n}\n\nexport { AddUserForm }\n","import React from 'react'\n\nconst UserTable = props => {\n  const handlerDelete = id => {\n    let answer = window.confirm('Are you sure?')\n    if (answer) {\n      props.deleteUser(id)\n    }\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Username</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.users.length > 0 ? (\n          props.users.map(user => (\n            <tr key={user.id}>\n              <td>{user.name}</td>\n              <td>{user.username}</td>\n              <td>\n                <button\n                  className=\"button muted-button\"\n                  onClick={() => props.editRow(user)}\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"button muted-button\"\n                  onClick={() => handlerDelete(user.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={3}>No users</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\nexport { UserTable }\n","import React, { useState, useEffect } from 'react'\n\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [props]\n  )\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n    setUser({ ...user, [name]: value })\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    if (!user.name || !user.username) return\n\n    props.updateUser(user.id, user)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        onChange={handleInputChange}\n      />\n      <label>Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={user.username}\n        onChange={handleInputChange}\n      />\n      <button>Update user</button>\n      <button\n        className=\"button muted-button\"\n        onClick={() => props.setEditing(false)}\n      >\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport { EditUserForm }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React, { useState } from 'react'\nimport { AddUserForm } from './forms/AddUserForm'\nimport { UserTable } from './tables/UserTable'\nimport { EditUserForm } from './forms/EditUserForm'\n\nconst App = () => {\n  const usersData = [\n    { id: 1, name: 'Andrew', username: 'tanenbaum' },\n    { id: 2, name: 'Richard', username: 'helm' },\n  ]\n  const [users, setUsers] = useState(usersData)\n  const [editing, setEditing] = useState(false)\n  const initialFormState = { id: null, name: '', username: '' }\n  const [currentUser, setCurrentUser] = useState(initialFormState)\n  const addUser = user => {\n    user.id = users.length + 1\n    setUsers([...users, user])\n  }\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false)\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)))\n  }\n\n  const editRow = user => {\n    setEditing(true)\n    setCurrentUser({ id: user.id, name: user.name, username: user.username })\n  }\n\n  const deleteUser = id => {\n    setEditing(false)\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  window.addUser = addUser\n  window.users = users\n  return (\n    <div className=\"container\">\n      <h1>CRUD App with Hooks</h1>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {editing ? (\n            <div>\n              <h2>Edit user</h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n            <div>\n              <h2>Add user</h2>\n              <AddUserForm addUser={addUser} />\n            </div>\n          )}\n        </div>\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          {/*  */}\n          <UserTable users={users} deleteUser={deleteUser} editRow={editRow} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { App }\n"],"sourceRoot":""}